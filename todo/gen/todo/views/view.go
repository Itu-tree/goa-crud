// Code generated by goa v3.7.3, DO NOT EDIT.
//
// todo views
//
// Command:
// $ goa gen todo/design

package views

import (
	goa "goa.design/goa/v3/pkg"
)

// Username is the viewed result type that is projected based on a view.
type Username struct {
	// Type to project
	Projected *UsernameView
	// View to render
	View string
}

// UsernameView is a type that runs validations on a projected type.
type UsernameView struct {
	// ID
	ID *int
	// Name
	Name *string
}

var (
	// UsernameMap is a map indexing the attribute names of Username by view name.
	UsernameMap = map[string][]string{
		"default": {
			"id",
			"name",
		},
	}
)

// ValidateUsername runs the validations defined on the viewed result type
// Username.
func ValidateUsername(result *Username) (err error) {
	switch result.View {
	case "default", "":
		err = ValidateUsernameView(result.Projected)
	default:
		err = goa.InvalidEnumValueError("view", result.View, []interface{}{"default"})
	}
	return
}

// ValidateUsernameView runs the validations defined on UsernameView using the
// "default" view.
func ValidateUsernameView(result *UsernameView) (err error) {

	return
}
